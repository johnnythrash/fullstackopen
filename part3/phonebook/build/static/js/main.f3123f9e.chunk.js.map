{"version":3,"sources":["components/Form.js","components/PersonForm.js","services/personServices.js","components/ResultsField.js","components/ConfirmField.js","App.js","index.js"],"names":["Form","value","text","onChange","PersonForm","props","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","personServices","getAll","axios","get","createPerson","nameObject","post","update","id","put","removePerson","console","log","delete","ResultsField","namesToShow","setPersons","setConfirmMessage","handleClick","event","preventDefault","name","target","window","confirm","then","res","data","message","setTimeout","catch","err","map","number","onClick","NotifyField","confirmMessage","className","App","useState","persons","setNewName","setNewNumber","showAll","setShowAll","useEffect","length","filter","toUpperCase","includes","some","index","p","indexOf","alert","concat","error","response","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3123f9e.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Form = ({ value, text, onChange }) => {\n return(\n <div>\n    {text}<input value={value} onChange={onChange} />\n  </div>\n )\n}\n\n\nexport default Form","import React from 'react'\nimport Form from './Form'\n\n\n\nconst PersonForm = (props) => {\n  \n  return (\n    <div>\n      <h2>Phonebook:</h2>\n      <form onSubmit={props.onSubmit}>\n        <Form text='name: ' value={props.newName} onChange={props.handleNameChange} />\n        <Form text='number: ' value={props.newNumber} onChange={props.handleNumberChange} />\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n\n      </form>\n    </div>\n  )\n}\n\nexport default PersonForm","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst createPerson = (nameObject) => {\n  return axios.post(baseUrl, nameObject)\n}\n\nconst update = (id, nameObject) => {\n  return axios.put(`${baseUrl}/${id}`, nameObject)\n}\n\nconst removePerson = (id) => {\n  console.log(`${baseUrl}/${id}`)\n  return axios.delete(`${baseUrl}/${id}`)\n\n}\n\nconst personServices = {\n  getAll: getAll,\n  createPerson: createPerson,\n  update: update,\n  removePerson: removePerson\n}\n\nexport default personServices","import React from 'react'\nimport personServices from '../services/personServices'\n\n\nconst ResultsField = ( {namesToShow, setPersons, setConfirmMessage} ) => {\n\n  const handleClick = (event) => {\n    event.preventDefault()\n    const name = event.target.name\n    const id = event.target.id\n    \n    if(window.confirm(`do you really want to remove ${name}?`)){\n        personServices.removePerson(id).then(\n        personServices.getAll().then(res=>{\n          setPersons(res.data)\n          console.log(res.data)\n          setConfirmMessage({\n            type:'error',\n            message: `removed ${name} from phonebook`\n          })\n          setTimeout(()=>{\n            setConfirmMessage(null)\n          }, 5000)\n        }))              \n        .catch(err=>{\n          setConfirmMessage({type:'error',\n          message: \"error, name does not exist on server!\"})\n          console.log(err)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Numbers:</h2>\n    <ul>\n      {namesToShow.map(name=>\n      <li key={name.id}>Name:{name.name} {name.number} <button id={name.id} name={name.name} onClick={handleClick}>delete</button></li>\n      )}\n    </ul>\n    </div>\n  )\n}\n\n\nexport default ResultsField","import React from 'react'\n\n\n  const NotifyField = ({ confirmMessage }) => {\n\n    if (confirmMessage === null){\n      return null\n    } \n    \n    if (confirmMessage.type === 'success'){\n      return (\n        <div className=\"notifySuccess\">\n          {confirmMessage.message}\n        </div>\n       )\n    }\n\n    if (confirmMessage.type === 'error'){\n      return (\n        <div className=\"notifyError\">\n          {confirmMessage.message}\n        </div>\n       )      \n    }\n\n\n  }\n\nexport default NotifyField","import React, { useEffect, useState } from 'react'\nimport Form from './components/Form'\nimport PersonForm from './components/PersonForm'\nimport ResultsField from './components/ResultsField'\nimport personServices from './services/personServices'\nimport SuccessField from './components/ConfirmField'\nimport './index.css'\n\n\nconst App = () => {\n  \n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState(' ')\n  const [ showAll, setShowAll ] = useState('')\n  const [ confirmMessage, setConfirmMessage ] = useState(null)\n\n  useEffect(() => {\n    personServices\n      .getAll()\n      .then(res=>{\n        setPersons(res.data)\n      })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n \n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    \n    if (persons.some(name=> name.name === newName )){\n      if(window.confirm(`${newName} is already in phonebook. do you want to replace the number?`)){\n        const index = persons.map(p=>p.name).indexOf(newName)\n        if (index){\n          personServices.update(persons[index].id,nameObject)\n          .then(personServices.getAll()\n          .then(res=>{\n              setPersons(res.data)\n              setConfirmMessage({\n                type: 'success',\n                message:`changed number for ${nameObject.name}`\n              })\n              setTimeout(()=>{\n                setConfirmMessage(null)\n              }, 5000)\n            \n          }))\n        } else {\n          window.alert(\"error! couldn't find entry in database\")\n        }\n      } }\n    else { \n      console.log(nameObject.name,nameObject.number)\n\n        \n        personServices.createPerson(nameObject)\n        .then(res=>{\n          console.log(\"successful block\")\n          setPersons(persons.concat(nameObject))\n          personServices.getAll().then(res=>{\n            setPersons(res.data)\n            setNewName('')\n            setNewNumber('')\n            setConfirmMessage({\n              type: 'success',\n              message: `added ${nameObject.name} to database`\n            })\n            setTimeout(()=>{\n              setConfirmMessage(null)\n            }, 5000)\n          })\n        }).catch(error=> {\n            console.log(error.response.data)\n            setConfirmMessage({\n               type: 'error',\n               message: error.response.data.error\n             })\n             personServices.getAll().then(res=>setPersons(res.data))\n        })\n      \n    }}\n  \n  const handleNameChange = (event) =>  setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => {\n    setShowAll(event.target.value)\n    console.log(showAll)\n  }\n\n/*   useEffect(() => {\n   console.log(showAll) \n  },[showAll]) */\n\n\n  const namesToShow = showAll.length < 1? persons: persons.filter(name=>name.name.toUpperCase().includes(showAll.toUpperCase()))\n\n  return (\n    <div>\n      <SuccessField confirmMessage={confirmMessage} />\n      <Form text=\"filter\" value={showAll} onChange={handleFilterChange} />\n      <PersonForm onSubmit={addName} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <ResultsField namesToShow={namesToShow} setConfirmMessage={setConfirmMessage} setPersons={setPersons} />\n    </div>\n  )\n}\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n"],"sourceRoot":""}